1. Given two strings s and t, return true if s is a subsequence of t, or false otherwise.

A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

Ans:

Dynamic Programming two poinyter solution
class Solution(object):
    def isSubsequence(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: bool
        """
        i=0
        j=0
        while i < len(s) and j < len(t):
            if s[i]==t[j]:
                i+=1
            j +=1
        if i==len(s):
            return True 
        else:
            return False
            
2.  Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.


Input: s = "egg", t = "add"
Output: true       

class Solution(object):
    def isIsomorphic(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: bool
        """
        d={}
        for i in range(len(s)):
            char1, char2 = s[i], t[i]
            if char1 not in d:
                if char2  in d.values():
                    return False
                d[char1]=char2
            elif d[char1] != char2:
                    return False
        return True
            
 
